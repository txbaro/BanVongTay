<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAPySURBVFhH3VhLTxNRGCXRnfozfESN7t2Qdu4DUGMClMRH
        BP8ARSiugMpjw4IR/oZ749IN2DtlY4lUaqJiTdgokDBTWFhyzRnKAN+U6S20SjzJSSYz373fydzH92hp
        +V+hYrHbGcaGFtva3jpSrirOSxnLKoN4dtravuFbhvNB2NLxTcH8nTuXFOcvHCF+LHZ0uIVnz3bWUim9
        MT6uvelpvT0z4xPPeLc2PKwLfX3bsFVSFhVjqXetrRfpvKfGu9bW80qIlMO5m3/8uPRrdFTvvHplTtvW
        GJN/9MhTnLv485iT+jkRFoS4lhXi81JPj7s5ORl2Xicxx1JXl5sVojAfi12l/uqCsqwHjhDej4GBXero
        tCz29+8qxrz38fh96tcIjmX1OkKUNl6+DE3eKK6n09qRsqQs6yn1H4nKnyttTk2FJm00seQQuWBZ96iO
        qsCew7I2889Rro+NaSy3Y1lXqJ4jwMnCgWjGnqvFYjJZdoRYiTzdOP65RGKLDv5bzHV3ew7ng1SXD1zC
        uOeMrpLZ2T3S98fR0H5zYkI7nG9VvcwRIXAJ00Ehzs7qcj6vyx8/GjkFy7mcLhcKemduLvSNMv/woYeI
        Q/W1IHz9GhsLDTjCirh9mIiEuMDeQCQijiPl9yPiEMwRLxGS6ADKww5riazHNqBt62xHh7fA+c0DgYyl
        EPhDxsfQxLGJzXFEgqEYGwgEIi1CVkINoxglIOqbCaElK+WbQGBWylWkR9SwFqsJqfauHnHgRjqtF6X8
        EghUQnjI4aihCamgwziJONCdntZKCDcQiCx42+CAHMdqIk8qDizNzCD0/W6uwOXlxgk880t85g+Jf80M
        D4cMoxglJOqbCdeGhhBNDq4ZZDGFvr4zc1Gv9PZuZxhLHgiMx2+dqVDX3u45sdiNQCCQFWK1ZjmJZGF5
        uS6Hh0WWV1ZqJgs/R0bCyQKAeIy6lQ4IsSLSRNw+IdJEHIh0C1uO6kO6fxFF9b9MWDcmJrTifOsD5xeo
        Ph8Zyxpc6u7+Nym/betcV5enhDjIYigqRVMBRXVogiaz2N9fVlJ+ep1InKO6jgDtCJSAKKrpJM0iMnlE
        swxjl6meqkA7QklZMtqPp6RfKEmJBPUu1REJtCNQ8aOoppM2ivhz8JHh/An1bwS0I7DcxWSysXvStvf2
        nBCo4Or7cxRoR6DizyUSLpYj5KxO4ir50Nnp4kAY77la8BuYlvUcRTUucz/iGITFgPsNTNS8nG8hztY8
        rSeBf5kzllJSfl9sb3dRffkt4HR6rwVs2z79FnA67WclCPwoIx0hViud1XDXoBlAMEdpiOorK+VX7NWg
        ic6Yh3dImWCj4vHrdPx/gz9kifX2fqmoiAAAAABJRU5ErkJggg==
</value>
  </data>
</root>